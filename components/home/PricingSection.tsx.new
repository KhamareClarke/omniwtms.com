'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { 
  Check, 
  X, 
  Star, 
  Clock, 
  TrendingUp, 
  Building, 
  PlusCircle, 
  Truck, 
  Crown, 
  Building2, 
  Shield, 
  Zap, 
  Users, 
  Headphones, 
  BarChart2 
} from 'lucide-react';
import dynamic from 'next/dynamic';
import clsx from 'clsx';

// Dynamically import SignupModal with no SSR to avoid hydration issues
const SignupModal = dynamic(() => import('@/components/SignupModal'), { 
  ssr: false
});

// Dynamically import UserSegmentationQuiz
const UserSegmentationQuiz = dynamic(() => import('@/components/UserSegmentationQuiz'), { 
  ssr: false
});

export default function PricingSection() {
  const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);
  const [isMounted, setIsMounted] = useState(false);
  
  // Only render client-side components after mounting
  useEffect(() => {
    setIsMounted(true);
  }, []);

  const handleOpenSignup = () => {
    setIsSignupModalOpen(true);
  };

  // New psychology-based pricing tiers with icons
  const plans = [
    {
      name: 'Commander',
      icon: Truck,
      iconColor: 'text-blue-500',
      price: '£999',
      period: '/mo',
      description: '1–2 Warehouses, Up to 20 Vehicles',
      idealFor: 'Perfect for small operations with basic needs',
      mainBenefit: 'Essential tools to get started',
      includedHighlights: [
        'Real-Time Warehouse Dashboard',
        'Smart Route Optimization',
        'Driver Compliance Tracking',
        'Live Training & Support'
      ],
      buttonText: "Let's set up your small team",
      popular: false,
      bgClass: 'bg-white',
      borderClass: 'border border-gray-200',
      hoverEffect: 'hover:shadow-lg transition-shadow duration-300'
    },
    {
      name: 'FleetMaster',
      icon: Crown,
      iconColor: 'text-amber-500',
      price: '£1,499',
      period: '/mo',
      description: '3–5 Warehouses, 50+ Drivers',
      idealFor: 'Growing businesses with multiple locations',
      mainBenefit: 'Advanced features + dedicated support',
      includedHighlights: [
        'Everything in Commander plan',
        'Dedicated Account Manager',
        'Multi-Warehouse Management',
        'Custom Reporting Tools'
      ],
      buttonText: 'Perfect for my growing business',
      popular: true,
      bgClass: 'bg-gradient-to-br from-blue-50 to-indigo-50',
      borderClass: 'border-2 border-blue-500',
      hoverEffect: 'hover:shadow-xl hover:-translate-y-1 transition-all duration-300'
    },
    {
      name: 'Titan',
      icon: Building2,
      iconColor: 'text-indigo-700',
      price: 'Custom',
      period: '',
      description: 'Multi-site Ops, 100+ Drivers, APIs',
      idealFor: 'Enterprise operations with complex needs',
      mainBenefit: 'Full customization + priority support',
      includedHighlights: [
        'Everything in FleetMaster plan',
        '3D Floor Mapping',
        'API Access & ERP Integration',
        'White-label Mobile App',
        'Custom Reports & Analytics'
      ],
      buttonText: "Let's talk enterprise solutions",
      popular: false,
      bgClass: 'bg-white',
      borderClass: 'border border-gray-200',
      hoverEffect: 'hover:shadow-lg transition-shadow duration-300'
    }
  ];
  
  // Feature grid for comparison - expanded with more features
  const featureGrid = [
    { name: 'Real-Time Warehouse Dashboard', commander: true, fleetmaster: true, titan: true, icon: BarChart2, description: 'Monitor warehouse activities in real-time' },
    { name: 'Smart Route Optimization', commander: true, fleetmaster: true, titan: true, icon: Zap, description: 'AI-powered delivery routes' },
    { name: 'Driver Compliance Tracking', commander: true, fleetmaster: true, titan: true, icon: Shield, description: 'Ensure regulatory compliance' },
    { name: '3D Floor Mapping', commander: false, fleetmaster: true, titan: true, icon: Building, description: 'Visualize warehouse layout' },
    { name: 'Multi-Warehouse Management', commander: false, fleetmaster: true, titan: true, icon: Building2, description: 'Centralized control for multiple sites' },
    { name: 'Custom Reporting Tools', commander: false, fleetmaster: true, titan: true, icon: BarChart2, description: 'Generate tailored reports' },
    { name: 'API Access', commander: false, fleetmaster: false, titan: true, icon: Zap, description: 'Connect with other software' },
    { name: 'White-label Mobile App', commander: false, fleetmaster: false, titan: true, icon: Users, description: 'Customized mobile experience' },
    { name: 'Advanced Analytics', commander: false, fleetmaster: false, titan: true, icon: TrendingUp, description: 'Deep data insights' },
    { name: '24/7 Priority Support', commander: false, fleetmaster: false, titan: true, icon: Headphones, description: 'Immediate assistance anytime' }
  ];
  
  // Add-ons for cross-sell/up-sell
  const addons = [
    { name: 'Pallet Mixer AI', price: '£299/mo', description: 'Optimize pallet arrangements for maximum space utilization' },
    { name: 'Advanced Analytics Module', price: '£199/mo', description: 'Deep insights into operational efficiency and cost savings' },
    { name: 'QuickBooks + Xero Integration', price: '£99/mo', description: 'Seamlessly connect accounting systems for real-time financial data' },
    { name: 'Priority Support', price: '£149/mo', description: 'Dedicated support team with 4-hour response guarantee' },
    { name: 'Custom API Development', price: '£399/mo', description: 'Tailor-made integrations for your unique business systems' },
    { name: 'Extended Team Training', price: '£249/mo', description: 'Comprehensive monthly training for new staff and refreshers' }
  ];
  
  return (
    <div id="pricing" className="py-12 sm:py-16 md:py-24 relative bg-gradient-to-b from-white via-gray-50 to-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section header */}
        <div className="text-center max-w-3xl mx-auto mb-8 sm:mb-12">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-3 sm:mb-4 px-2">
            Simple, transparent pricing
          </h2>
          <p className="text-base sm:text-lg text-gray-600 px-3 sm:px-0">
            Choose the plan that scales with your business. All plans include 24/7 support, regular updates, and data backup.
          </p>
        </div>

        {/* Pricing Plans */}
        <div className="flex flex-col md:flex-row gap-4 sm:gap-6 mb-8 sm:mb-12 px-2 sm:px-0">
          {plans.map((plan, index) => (
            <div key={index} className="relative flex-1">
              <div 
                className={clsx(
                  "border rounded-2xl overflow-hidden transition-all duration-300",
                  plan.popular 
                    ? "border-blue-500 shadow-xl md:scale-105 relative z-10" 
                    : "border-gray-200 shadow-md hover:shadow-lg hover:-translate-y-1"
                )}
              >
                {/* Popular tag */}
                {plan.popular && (
                  <div className="bg-gradient-to-r from-blue-600 to-blue-500 text-white text-center py-2 text-xs font-bold uppercase tracking-wider flex items-center justify-center gap-1">
                    <Star className="h-3 w-3" fill="white" /> MOST POPULAR <Star className="h-3 w-3" fill="white" />
                  </div>
                )}
                
                {/* Card content */}
                <div className="p-5 sm:p-6 md:p-8">
                  {/* Plan Header with Icon */}
                  <div className="text-center">
                    {/* Tier Icon */}
                    <div className="flex justify-center mb-3">
                      <div className={`p-3 rounded-full ${plan.popular ? 'bg-gradient-to-r from-blue-100 to-indigo-100' : 'bg-blue-50'}`}>
                        {plan.icon && <plan.icon size={28} className={`${plan.iconColor}`} />}
                      </div>
                    </div>
                    
                    {/* Plan name and price */}
                    <h3 className="text-xl font-bold mb-2">{plan.name}</h3>
                    <div className="mb-2">
                      <span className="text-2xl sm:text-3xl font-bold">{plan.price}</span>
                      <span className="text-gray-600">{plan.period}</span>
                    </div>
                    <p className="text-sm sm:text-base text-gray-700 mb-4">{plan.description}</p>
                  </div>
                  
                  {/* Benefits */}
                  <div className="mb-6">
                    <div className="bg-gray-50 rounded-lg p-3 sm:p-4 mb-4">
                      <p className="text-xs sm:text-sm font-medium text-gray-800">{plan.idealFor}</p>
                    </div>
                    <p className="text-xs sm:text-sm font-bold text-center mb-3">{plan.mainBenefit}</p>
                    <ul className="space-y-2 sm:space-y-3">
                      {plan.includedHighlights.map((feature, idx) => (
                        <li key={idx} className="flex items-start">
                          <div className="flex-shrink-0 mt-0.5">
                            <Check className="h-4 w-4 text-green-500" />
                          </div>
                          <span className="ml-2 text-xs sm:text-sm">{feature}</span>
                        </li>
                      ))}
                    </ul>
                  </div>

                  {/* Action button */}
                  <div className="mt-4 sm:mt-6">
                    <Button
                      onClick={handleOpenSignup}
                      className={clsx(
                        "w-full py-3 sm:py-4 px-4 sm:px-6 rounded-lg font-bold transition-all duration-300",
                        plan.popular 
                          ? "bg-blue-600 hover:bg-blue-700 text-white" 
                          : "bg-white hover:bg-gray-50 text-gray-900 border border-gray-300 hover:border-gray-400"
                      )}
                    >
                      {plan.buttonText}
                    </Button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Feature comparison grid */}
        <div className="mt-16 bg-white border border-gray-200 rounded-xl shadow-lg overflow-hidden mb-12">
          <div className="px-4 sm:px-6 py-4 bg-gray-50 border-b border-gray-200">
            <h3 className="text-lg sm:text-xl font-bold text-gray-800">Plan Breakdown</h3>
          </div>
          
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="bg-gray-50 border-b border-gray-200">
                  <th className="py-3 sm:py-4 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-gray-700">Feature</th>
                  <th className="py-3 sm:py-4 px-3 sm:px-6 text-center text-xs sm:text-sm font-medium text-gray-700">Commander</th>
                  <th className="py-3 sm:py-4 px-3 sm:px-6 text-center text-xs sm:text-sm font-medium text-blue-600 border-x border-gray-200">FleetMaster</th>
                  <th className="py-3 sm:py-4 px-3 sm:px-6 text-center text-xs sm:text-sm font-medium text-gray-700">Titan</th>
                </tr>
              </thead>
              <tbody>
                {featureGrid.map((feature, index) => (
                  <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>
                    <td className="py-3 sm:py-4 px-3 sm:px-6 text-xs sm:text-sm text-gray-800">{feature.name}</td>
                    <td className="py-3 sm:py-4 px-3 sm:px-6 text-center">
                      {feature.commander ? <Check className="h-4 sm:h-5 w-4 sm:w-5 text-green-500 mx-auto" /> : <X className="h-4 sm:h-5 w-4 sm:w-5 text-gray-300 mx-auto" />}
                    </td>
                    <td className="py-3 sm:py-4 px-3 sm:px-6 text-center border-x border-gray-200">
                      {feature.fleetmaster ? <Check className="h-4 sm:h-5 w-4 sm:w-5 text-green-500 mx-auto" /> : <X className="h-4 sm:h-5 w-4 sm:w-5 text-gray-300 mx-auto" />}
                    </td>
                    <td className="py-3 sm:py-4 px-3 sm:px-6 text-center">
                      {feature.titan ? <Check className="h-4 sm:h-5 w-4 sm:w-5 text-green-500 mx-auto" /> : <X className="h-4 sm:h-5 w-4 sm:w-5 text-gray-300 mx-auto" />}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* ROI stats in mobile-friendly grid */}
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 sm:gap-6 mb-12">
          <div className="bg-white rounded-xl shadow-md border border-gray-100 p-4 sm:p-6">
            <div className="flex flex-col sm:flex-row sm:items-start">
              <div className="bg-blue-100 p-3 rounded-lg mb-3 sm:mb-0 sm:mr-4 flex-shrink-0">
                <Clock className="h-5 w-5 sm:h-6 sm:w-6 text-blue-600" />
              </div>
              <div>
                <h3 className="font-bold text-base sm:text-lg mb-1 sm:mb-2">Save 60+ Hours/Month</h3>
                <p className="text-gray-600 text-xs sm:text-sm">Eliminate manual admin tasks with smart automation</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-md border border-gray-100 p-4 sm:p-6">
            <div className="flex flex-col sm:flex-row sm:items-start">
              <div className="bg-blue-100 p-3 rounded-lg mb-3 sm:mb-0 sm:mr-4 flex-shrink-0">
                <TrendingUp className="h-5 w-5 sm:h-6 sm:w-6 text-blue-600" />
              </div>
              <div>
                <h3 className="font-bold text-base sm:text-lg mb-1 sm:mb-2">3x More Orders Processed</h3>
                <p className="text-gray-600 text-xs sm:text-sm">Without adding headcount to your team</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-md border border-gray-100 p-4 sm:p-6">
            <div className="flex flex-col sm:flex-row sm:items-start">
              <div className="bg-blue-100 p-3 rounded-lg mb-3 sm:mb-0 sm:mr-4 flex-shrink-0">
                <Building className="h-5 w-5 sm:h-6 sm:w-6 text-blue-600" />
              </div>
              <div>
                <h3 className="font-bold text-base sm:text-lg mb-1 sm:mb-2">Used by Large Warehouses</h3>
                <p className="text-gray-600 text-xs sm:text-sm">Moving £10M+ per year in inventory</p>
              </div>
            </div>
          </div>
        </div>

        {/* Quiz for user segmentation */}
        <div className="mt-12 sm:mt-16 mb-8 sm:mb-10">
          <h3 className="text-xl sm:text-2xl font-bold text-center mb-4 sm:mb-6">Not sure which plan? Let's figure it out together</h3>
          {isMounted && <UserSegmentationQuiz />}
        </div>

        {/* Trust statement */}
        <div className="mt-8 sm:mt-10 text-center">
          <p className="text-gray-600 text-base sm:text-lg">Backed by logistics pros across the UK</p>
        </div>

        {/* Add-ons section */}
        <div className="mt-12 sm:mt-16 bg-white border border-gray-200 rounded-xl shadow-lg overflow-hidden">
          <div className="px-4 sm:px-6 py-3 sm:py-4 bg-gray-50 border-b border-gray-200">
            <h3 className="text-lg sm:text-xl font-bold text-gray-800">Optional Add-ons</h3>
          </div>
          
          <div className="p-4 sm:p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3 sm:gap-4">
              {addons.map((addon, index) => (
                <div key={index} className="flex items-center justify-between border-b border-gray-100 py-3 sm:py-4">
                  <div className="flex items-center">
                    <PlusCircle className="h-4 w-4 sm:h-5 sm:w-5 text-blue-500 mr-2 sm:mr-3" />
                    <span className="text-gray-800 font-medium text-xs sm:text-sm">{addon.name}</span>
                  </div>
                  <span className="font-bold text-gray-900 text-xs sm:text-sm">{addon.price}</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Custom quote CTA */}
        <div className="mt-8 sm:mt-10 p-5 sm:p-8 bg-blue-50 rounded-xl border border-blue-100 text-center">
          <h3 className="text-lg sm:text-xl font-bold text-gray-900 mb-2 sm:mb-3">Want a custom quote for multiple warehouses?</h3>
          <div className="flex flex-col sm:flex-row justify-center gap-3 sm:gap-4 mt-3 sm:mt-4">
            <Button
              onClick={handleOpenSignup}
              className="bg-blue-600 text-white font-bold py-4 sm:py-6 px-6 sm:px-8 shadow-md hover:bg-blue-700 rounded-lg text-sm sm:text-base"
            >
              Talk to Sales
            </Button>
            <Button
              onClick={handleOpenSignup}
              className="bg-blue-600 text-white font-bold py-4 sm:py-6 px-6 sm:px-8 shadow-md hover:bg-blue-700 rounded-lg text-sm sm:text-base"
            >
              Schedule Consultation
            </Button>
          </div>
        </div>

        {/* Signup Modal */}
        {isMounted && (
          <SignupModal 
            isOpen={isSignupModalOpen} 
            onClose={() => setIsSignupModalOpen(false)} 
          />
        )}
      </div>
    </div>
  );
}
